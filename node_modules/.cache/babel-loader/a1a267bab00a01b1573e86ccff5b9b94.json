{"ast":null,"code":"const getLocalStorageData = () => {\n  try {\n    const data = JSON.parse(localStorage.getItem('cartData'));\n    return data;\n  } catch (error) {\n    return [];\n  }\n};\n\nconst initialState = {\n  cartData: localStorage.getItem('cartData') ? getLocalStorageData() : []\n};\nexport default function cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'CART_ADD_POSITION':\n      {\n        const {\n          cartProduct\n        } = action.payload;\n\n        const updateState = (currState, product) => currState.cartData.find(value => value.id === product.id && value.size === product.size) ? [...currState.cartData.map(value => value.id === product.id && value.size === product.size ? { ...value,\n          count: value.count + product.count,\n          price: product.price < value.price ? product.price : value.price\n        } : value)] : [...currState.cartData, product];\n\n        const newState = updateState(state, cartProduct);\n        localStorage.setItem('cartData', JSON.stringify(newState));\n        return { ...state,\n          cartData: newState\n        };\n      }\n\n    case 'CART_DELETE_POSITION':\n      {\n        const {\n          id,\n          size\n        } = action.payload;\n\n        const updateState = () => [...state.cartData.filter(value => !(value.id === id && value.size === size))];\n\n        const newState = updateState();\n        localStorage.setItem('cartData', JSON.stringify(newState));\n        return { ...state,\n          cartData: newState\n        };\n      }\n\n    case 'CART_LOCALSTORAGE_CLEAR':\n      {\n        localStorage.removeItem('cartData');\n        return { ...state,\n          cartData: []\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Documents/GitHub/ra16-diploma-master/src/reducers/cartReducer.js"],"names":["getLocalStorageData","data","JSON","parse","localStorage","getItem","error","initialState","cartData","cartReducer","state","action","type","cartProduct","payload","updateState","currState","product","find","value","id","size","map","count","price","newState","setItem","stringify","filter","removeItem"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,MAAM;AAChC,MAAI;AACF,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAb;AACA,WAAOJ,IAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAO,EAAP;AACD;AACF,CAPD;;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCL,mBAAmB,EAAtD,GAA2D;AADlD,CAArB;AAIA,eAAe,SAASS,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2CI,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AAA0B;AACxB,cAAM;AAAEC,UAAAA;AAAF,YAAkBF,MAAM,CAACG,OAA/B;;AACA,cAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,OAAZ,KACjBD,SAAS,CAACR,QAAV,CAAmBU,IAAnB,CACEC,KAAD,IAAYA,KAAK,CAACC,EAAN,KAAaH,OAAO,CAACG,EAArB,IAA2BD,KAAK,CAACE,IAAN,KAAeJ,OAAO,CAACI,IAD/D,CAAD,GAGI,CAAC,GAAGL,SAAS,CAACR,QAAV,CAAmBc,GAAnB,CACHH,KAAD,IAAYA,KAAK,CAACC,EAAN,KAAaH,OAAO,CAACG,EAArB,IAA2BD,KAAK,CAACE,IAAN,KAAeJ,OAAO,CAACI,IAAlD,GACR,EACA,GAAGF,KADH;AAEAI,UAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAcN,OAAO,CAACM,KAF7B;AAGAC,UAAAA,KAAK,EAAGP,OAAO,CAACO,KAAR,GAAgBL,KAAK,CAACK,KAAvB,GAAgCP,OAAO,CAACO,KAAxC,GAAgDL,KAAK,CAACK;AAH7D,SADQ,GAMRL,KAPA,CAAJ,CAHJ,GAYI,CAAC,GAAGH,SAAS,CAACR,QAAd,EAAwBS,OAAxB,CAbN;;AAeA,cAAMQ,QAAQ,GAAGV,WAAW,CAACL,KAAD,EAAQG,WAAR,CAA5B;AACAT,QAAAA,YAAY,CAACsB,OAAb,CAAqB,UAArB,EAAiCxB,IAAI,CAACyB,SAAL,CAAeF,QAAf,CAAjC;AACA,eAAO,EAAE,GAAGf,KAAL;AAAYF,UAAAA,QAAQ,EAAEiB;AAAtB,SAAP;AACD;;AACD,SAAK,sBAAL;AAA6B;AAC3B,cAAM;AAAEL,UAAAA,EAAF;AAAMC,UAAAA;AAAN,YAAeV,MAAM,CAACG,OAA5B;;AACA,cAAMC,WAAW,GAAG,MAClB,CAAC,GAAGL,KAAK,CAACF,QAAN,CAAeoB,MAAf,CAAuBT,KAAD,IAAW,EAAEA,KAAK,CAACC,EAAN,KAAaA,EAAb,IAAmBD,KAAK,CAACE,IAAN,KAAeA,IAApC,CAAjC,CAAJ,CADF;;AAGA,cAAMI,QAAQ,GAAGV,WAAW,EAA5B;AACAX,QAAAA,YAAY,CAACsB,OAAb,CAAqB,UAArB,EAAiCxB,IAAI,CAACyB,SAAL,CAAeF,QAAf,CAAjC;AACA,eAAO,EAAE,GAAGf,KAAL;AAAYF,UAAAA,QAAQ,EAAEiB;AAAtB,SAAP;AACD;;AACD,SAAK,yBAAL;AAAgC;AAC9BrB,QAAAA,YAAY,CAACyB,UAAb,CAAwB,UAAxB;AACA,eAAO,EAAE,GAAGnB,KAAL;AAAYF,UAAAA,QAAQ,EAAE;AAAtB,SAAP;AACD;;AACD;AAAS,aAAOE,KAAP;AAnCX;AAqCD","sourcesContent":["const getLocalStorageData = () => {\n  try {\n    const data = JSON.parse(localStorage.getItem('cartData'));\n    return data;\n  } catch (error) {\n    return [];\n  }\n};\n\nconst initialState = {\n  cartData: localStorage.getItem('cartData') ? getLocalStorageData() : [],\n};\n\nexport default function cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'CART_ADD_POSITION': {\n      const { cartProduct } = action.payload;\n      const updateState = (currState, product) => (\n        (currState.cartData.find(\n          (value) => (value.id === product.id && value.size === product.size),\n        ))\n          ? [...currState.cartData.map(\n            (value) => (value.id === product.id && value.size === product.size\n              ? {\n                ...value,\n                count: value.count + product.count,\n                price: (product.price < value.price) ? product.price : value.price,\n              }\n              : value),\n          )]\n          : [...currState.cartData, product]\n      );\n      const newState = updateState(state, cartProduct);\n      localStorage.setItem('cartData', JSON.stringify(newState));\n      return { ...state, cartData: newState };\n    }\n    case 'CART_DELETE_POSITION': {\n      const { id, size } = action.payload;\n      const updateState = () => (\n        [...state.cartData.filter((value) => !(value.id === id && value.size === size))]\n      );\n      const newState = updateState();\n      localStorage.setItem('cartData', JSON.stringify(newState));\n      return { ...state, cartData: newState };\n    }\n    case 'CART_LOCALSTORAGE_CLEAR': {\n      localStorage.removeItem('cartData');\n      return { ...state, cartData: [] };\n    }\n    default: return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}