{"ast":null,"code":"import { createProduct } from '../api/requests';\nexport const productRequestStarted = () => ({\n  type: 'PRODUCT_REQUEST'\n});\nexport const productRequestSuccess = product => ({\n  type: 'PRODUCT_REQUEST_SUCCESS',\n  payload: {\n    product\n  }\n});\nexport const productRequestFailure = (errorText, repeatAction) => ({\n  type: 'PRODUCT_REQUEST_FAILURE',\n  payload: {\n    errorText,\n    repeatAction\n  }\n});\nexport const productCount = count => ({\n  type: 'PRODUCT_COUNT',\n  payload: {\n    count\n  }\n});\nexport const productSize = size => ({\n  type: 'PRODUCT_SIZE',\n  payload: {\n    size\n  }\n});\nexport const productRequest = id => async dispatch => {\n  dispatch(productRequestStarted());\n\n  try {\n    const data = await createProduct(id);\n    dispatch(productRequestSuccess(data));\n  } catch (e) {\n    const detailedError = JSON.parse(e.message);\n    if (detailedError.code === 404) dispatch(productRequestFailure('Товар недоступен для заказа', false));else dispatch(productRequestFailure(detailedError.text, true));\n  }\n};","map":{"version":3,"sources":["D:/Documents/GitHub/ra16-diploma-master/src/actions/productAction.js"],"names":["createProduct","productRequestStarted","type","productRequestSuccess","product","payload","productRequestFailure","errorText","repeatAction","productCount","count","productSize","size","productRequest","id","dispatch","data","e","detailedError","JSON","parse","message","code","text"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAP,CAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAIC,OAAD,KAAc;AAAEF,EAAAA,IAAI,EAAE,yBAAR;AAAmCG,EAAAA,OAAO,EAAE;AAAED,IAAAA;AAAF;AAA5C,CAAd,CAA9B;AACP,OAAO,MAAME,qBAAqB,GAAG,CAACC,SAAD,EAAYC,YAAZ,MAA8B;AAAEN,EAAAA,IAAI,EAAE,yBAAR;AAAmCG,EAAAA,OAAO,EAAE;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb;AAA5C,CAA9B,CAA9B;AACP,OAAO,MAAMC,YAAY,GAAIC,KAAD,KAAY;AAAER,EAAAA,IAAI,EAAE,eAAR;AAAyBG,EAAAA,OAAO,EAAE;AAAEK,IAAAA;AAAF;AAAlC,CAAZ,CAArB;AACP,OAAO,MAAMC,WAAW,GAAIC,IAAD,KAAW;AAAEV,EAAAA,IAAI,EAAE,cAAR;AAAwBG,EAAAA,OAAO,EAAE;AAAEO,IAAAA;AAAF;AAAjC,CAAX,CAApB;AAEP,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACxDA,EAAAA,QAAQ,CAACd,qBAAqB,EAAtB,CAAR;;AACA,MAAI;AACF,UAAMe,IAAI,GAAG,MAAMhB,aAAa,CAACc,EAAD,CAAhC;AACAC,IAAAA,QAAQ,CAACZ,qBAAqB,CAACa,IAAD,CAAtB,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,UAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,OAAb,CAAtB;AACA,QAAIH,aAAa,CAACI,IAAd,KAAuB,GAA3B,EAAgCP,QAAQ,CAACT,qBAAqB,CAAC,6BAAD,EAAgC,KAAhC,CAAtB,CAAR,CAAhC,KACKS,QAAQ,CAACT,qBAAqB,CAACY,aAAa,CAACK,IAAf,EAAqB,IAArB,CAAtB,CAAR;AACN;AACF,CAVM","sourcesContent":["import { createProduct } from '../api/requests';\n\nexport const productRequestStarted = () => ({ type: 'PRODUCT_REQUEST' });\nexport const productRequestSuccess = (product) => ({ type: 'PRODUCT_REQUEST_SUCCESS', payload: { product } });\nexport const productRequestFailure = (errorText, repeatAction) => ({ type: 'PRODUCT_REQUEST_FAILURE', payload: { errorText, repeatAction } });\nexport const productCount = (count) => ({ type: 'PRODUCT_COUNT', payload: { count } });\nexport const productSize = (size) => ({ type: 'PRODUCT_SIZE', payload: { size } });\n\nexport const productRequest = (id) => async (dispatch) => {\n  dispatch(productRequestStarted());\n  try {\n    const data = await createProduct(id);\n    dispatch(productRequestSuccess(data));\n  } catch (e) {\n    const detailedError = JSON.parse(e.message);\n    if (detailedError.code === 404) dispatch(productRequestFailure('Товар недоступен для заказа', false));\n    else dispatch(productRequestFailure(detailedError.text, true));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}