{"ast":null,"code":"export default async function fetchData(url, opts) {\n  let response = null;\n  let detailedError = null;\n\n  try {\n    response = await fetch(url, opts);\n\n    if (!response.ok) {\n      detailedError = JSON.stringify({\n        code: response.status,\n        text: 'Ошибка загрузки данных'\n      });\n      throw new Error(detailedError);\n    }\n\n    if (response.status === 204) return [];\n  } catch (e) {\n    if (!response) detailedError = JSON.stringify({\n      code: 500,\n      text: 'Ошибка загрузки данных'\n    });\n    throw new Error(detailedError);\n  }\n\n  const data = await response.json();\n  return data;\n}\nexport async function fetchCompositeData(urls, opts) {\n  const results = await Promise.all(urls.map(url => fetch(url, opts).then(response => response.json()) // eslint-disable-next-line no-unused-vars\n  .catch(e => {\n    const detailedError = JSON.stringify({\n      code: 500,\n      text: 'Ошибка загрузки данных'\n    });\n    throw new Error(detailedError);\n  })));\n  return results;\n}","map":{"version":3,"sources":["D:/Documents/GitHub/ra16-diploma-master/src/api/fetch.js"],"names":["fetchData","url","opts","response","detailedError","fetch","ok","JSON","stringify","code","status","text","Error","e","data","json","fetchCompositeData","urls","results","Promise","all","map","then","catch"],"mappings":"AAAA,eAAe,eAAeA,SAAf,CAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AACjD,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIC,aAAa,GAAG,IAApB;;AACA,MAAI;AACFD,IAAAA,QAAQ,GAAG,MAAME,KAAK,CAACJ,GAAD,EAAMC,IAAN,CAAtB;;AACA,QAAI,CAACC,QAAQ,CAACG,EAAd,EAAkB;AAChBF,MAAAA,aAAa,GAAGG,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAEN,QAAQ,CAACO,MAAjB;AAAyBC,QAAAA,IAAI,EAAE;AAA/B,OAAf,CAAhB;AACA,YAAM,IAAIC,KAAJ,CAAUR,aAAV,CAAN;AACD;;AACD,QAAID,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B,OAAO,EAAP;AAC9B,GAPD,CAOE,OAAOG,CAAP,EAAU;AACV,QAAI,CAACV,QAAL,EAAeC,aAAa,GAAGG,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaE,MAAAA,IAAI,EAAE;AAAnB,KAAf,CAAhB;AACf,UAAM,IAAIC,KAAJ,CAAUR,aAAV,CAAN;AACD;;AACD,QAAMU,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAT,EAAnB;AACA,SAAOD,IAAP;AACD;AAED,OAAO,eAAeE,kBAAf,CAAkCC,IAAlC,EAAwCf,IAAxC,EAA8C;AACnD,QAAMgB,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAL,CAAUpB,GAAD,IAASI,KAAK,CAACJ,GAAD,EAAMC,IAAN,CAAL,CACjDoB,IADiD,CAC3CnB,QAAD,IAAcA,QAAQ,CAACY,IAAT,EAD8B,EAElD;AAFkD,GAGjDQ,KAHiD,CAG1CV,CAAD,IAAO;AACZ,UAAMT,aAAa,GAAGG,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaE,MAAAA,IAAI,EAAE;AAAnB,KAAf,CAAtB;AACA,UAAM,IAAIC,KAAJ,CAAUR,aAAV,CAAN;AACD,GANiD,CAAlB,CAAZ,CAAtB;AAOA,SAAOc,OAAP;AACD","sourcesContent":["export default async function fetchData(url, opts) {\n  let response = null;\n  let detailedError = null;\n  try {\n    response = await fetch(url, opts);\n    if (!response.ok) {\n      detailedError = JSON.stringify({ code: response.status, text: 'Ошибка загрузки данных' });\n      throw new Error(detailedError);\n    }\n    if (response.status === 204) return [];\n  } catch (e) {\n    if (!response) detailedError = JSON.stringify({ code: 500, text: 'Ошибка загрузки данных' });\n    throw new Error(detailedError);\n  }\n  const data = await response.json();\n  return data;\n}\n\nexport async function fetchCompositeData(urls, opts) {\n  const results = await Promise.all(urls.map((url) => fetch(url, opts)\n    .then((response) => response.json())\n    // eslint-disable-next-line no-unused-vars\n    .catch((e) => {\n      const detailedError = JSON.stringify({ code: 500, text: 'Ошибка загрузки данных' });\n      throw new Error(detailedError);\n    })));\n  return results;\n}\n"]},"metadata":{},"sourceType":"module"}