{"ast":null,"code":"import _regeneratorRuntime from\"D:/Documents/GitHub/ra16-diploma-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Documents/GitHub/ra16-diploma-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createCatalog}from'../api/requests';export var catalogFirstPageRequestStarted=function catalogFirstPageRequestStarted(){return{type:'CATALOG_FIRSTPAGE_REQUEST'};};export var catalogNextPageRequestStarted=function catalogNextPageRequestStarted(){return{type:'CATALOG_NEXTPAGE_REQUEST'};};export var catalogFirstPageRequestSuccess=function catalogFirstPageRequestSuccess(catalogData){return{type:'CATALOG_FIRSTPAGE_REQUEST_SUCCESS',payload:{catalogData:catalogData}};};export var catalogNextPageRequestSuccess=function catalogNextPageRequestSuccess(catalogData){return{type:'CATALOG_NEXTPAGE_REQUEST_SUCCESS',payload:{catalogData:catalogData}};};export var catalogRequestFailure=function catalogRequestFailure(errorText){return{type:'CATALOG_REQUEST_FAILURE',payload:{errorText:errorText}};};export var catalogRequest=function catalogRequest(searchText,categoryId,offset){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(offset)dispatch(catalogNextPageRequestStarted());else dispatch(catalogFirstPageRequestStarted());createCatalog(searchText,categoryId,offset).then(function(catalogData){if(offset)dispatch(catalogNextPageRequestSuccess(catalogData));else dispatch(catalogFirstPageRequestSuccess(catalogData));}).catch(function(e){var detailedError=JSON.parse(e.message);dispatch(catalogRequestFailure(detailedError.text));});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/Documents/GitHub/ra16-diploma-master/src/actions/catalogAction.js"],"names":["createCatalog","catalogFirstPageRequestStarted","type","catalogNextPageRequestStarted","catalogFirstPageRequestSuccess","catalogData","payload","catalogNextPageRequestSuccess","catalogRequestFailure","errorText","catalogRequest","searchText","categoryId","offset","dispatch","then","catch","e","detailedError","JSON","parse","message","text"],"mappings":"yTAAA,OAASA,aAAT,KAA8B,iBAA9B,CAEA,MAAO,IAAMC,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,SAAO,CAAEC,IAAI,CAAE,2BAAR,CAAP,EAAvC,CACP,MAAO,IAAMC,CAAAA,6BAA6B,CAAG,QAAhCA,CAAAA,6BAAgC,SAAO,CAAED,IAAI,CAAE,0BAAR,CAAP,EAAtC,CACP,MAAO,IAAME,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,CAACC,WAAD,QAAkB,CAAEH,IAAI,CAAE,mCAAR,CAA6CI,OAAO,CAAE,CAAED,WAAW,CAAXA,WAAF,CAAtD,CAAlB,EAAvC,CACP,MAAO,IAAME,CAAAA,6BAA6B,CAAG,QAAhCA,CAAAA,6BAAgC,CAACF,WAAD,QAAkB,CAAEH,IAAI,CAAE,kCAAR,CAA4CI,OAAO,CAAE,CAAED,WAAW,CAAXA,WAAF,CAArD,CAAlB,EAAtC,CACP,MAAO,IAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,SAAD,QAAgB,CAAEP,IAAI,CAAE,yBAAR,CAAmCI,OAAO,CAAE,CAAEG,SAAS,CAATA,SAAF,CAA5C,CAAhB,EAA9B,CAEP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAaC,UAAb,CAAyBC,MAAzB,iGAAoC,iBAAOC,QAAP,kHAChE,GAAID,MAAJ,CAAYC,QAAQ,CAACX,6BAA6B,EAA9B,CAAR,CAAZ,IACKW,CAAAA,QAAQ,CAACb,8BAA8B,EAA/B,CAAR,CACLD,aAAa,CAACW,UAAD,CAAaC,UAAb,CAAyBC,MAAzB,CAAb,CAA8CE,IAA9C,CAAmD,SAACV,WAAD,CAAiB,CAClE,GAAIQ,MAAJ,CAAYC,QAAQ,CAACP,6BAA6B,CAACF,WAAD,CAA9B,CAAR,CAAZ,IACKS,CAAAA,QAAQ,CAACV,8BAA8B,CAACC,WAAD,CAA/B,CAAR,CACN,CAHD,EAGGW,KAHH,CAGS,SAACC,CAAD,CAAO,CACd,GAAMC,CAAAA,aAAa,CAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,OAAb,CAAtB,CACAP,QAAQ,CAACN,qBAAqB,CAACU,aAAa,CAACI,IAAf,CAAtB,CAAR,CACD,CAND,EAHgE,sDAApC,gEAAvB","sourcesContent":["import { createCatalog } from '../api/requests';\n\nexport const catalogFirstPageRequestStarted = () => ({ type: 'CATALOG_FIRSTPAGE_REQUEST' });\nexport const catalogNextPageRequestStarted = () => ({ type: 'CATALOG_NEXTPAGE_REQUEST' });\nexport const catalogFirstPageRequestSuccess = (catalogData) => ({ type: 'CATALOG_FIRSTPAGE_REQUEST_SUCCESS', payload: { catalogData } });\nexport const catalogNextPageRequestSuccess = (catalogData) => ({ type: 'CATALOG_NEXTPAGE_REQUEST_SUCCESS', payload: { catalogData } });\nexport const catalogRequestFailure = (errorText) => ({ type: 'CATALOG_REQUEST_FAILURE', payload: { errorText } });\n\nexport const catalogRequest = (searchText, categoryId, offset) => async (dispatch) => {\n  if (offset) dispatch(catalogNextPageRequestStarted());\n  else dispatch(catalogFirstPageRequestStarted());\n  createCatalog(searchText, categoryId, offset).then((catalogData) => {\n    if (offset) dispatch(catalogNextPageRequestSuccess(catalogData));\n    else dispatch(catalogFirstPageRequestSuccess(catalogData));\n  }).catch((e) => {\n    const detailedError = JSON.parse(e.message);\n    dispatch(catalogRequestFailure(detailedError.text));\n  });\n};\n"]},"metadata":{},"sourceType":"module"}