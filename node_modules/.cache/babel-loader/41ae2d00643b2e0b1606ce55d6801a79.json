{"ast":null,"code":"import _regeneratorRuntime from\"D:/Documents/GitHub/ra16-diploma-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Documents/GitHub/ra16-diploma-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import Preloader from'../Preloader/Preloader';import MessageDialog from'../MessageDialog/MessageDialog';import List from'../List/List';import{topSalesRequest}from'../../actions/topSalesAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TopSales(){var topSalesState=useSelector(function(state){return state.topSalesReducer;});var dispatch=useDispatch();function getTopSales(){return _getTopSales.apply(this,arguments);}function _getTopSales(){_getTopSales=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(topSalesRequest());case 1:case\"end\":return _context.stop();}}},_callee);}));return _getTopSales.apply(this,arguments);}useEffect(function(){getTopSales();},[dispatch]);return(topSalesState.topSalesData.length||topSalesState.loadingStatus||topSalesState.errorText)&&/*#__PURE__*/_jsxs(\"section\",{className:\"top-sales\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"\\u0425\\u0438\\u0442\\u044B \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436!\"}),topSalesState.loadingStatus&&/*#__PURE__*/_jsx(Preloader,{}),topSalesState.errorText&&/*#__PURE__*/_jsx(MessageDialog,{content:{type:'error',text:topSalesState.errorText},onClick:function onClick(){return getTopSales();}}),/*#__PURE__*/_jsx(List,{data:topSalesState.topSalesData})]});}","map":{"version":3,"sources":["D:/Documents/GitHub/ra16-diploma-master/src/components/TopSales/TopSales.jsx"],"names":["React","useEffect","useSelector","useDispatch","Preloader","MessageDialog","List","topSalesRequest","TopSales","topSalesState","state","topSalesReducer","dispatch","getTopSales","topSalesData","length","loadingStatus","errorText","type","text"],"mappings":"yTAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,OAASC,eAAT,KAAgC,8BAAhC,C,wFAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAMC,CAAAA,aAAa,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,eAAjB,EAAD,CAAjC,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAFiC,QAIlBU,CAAAA,WAJkB,2IAIjC,mIACED,QAAQ,CAACL,eAAe,EAAhB,CAAR,CADF,sDAJiC,8CAQjCN,SAAS,CAAC,UAAM,CACdY,WAAW,GACZ,CAFQ,CAEN,CAACD,QAAD,CAFM,CAAT,CAIA,MACE,CAACH,aAAa,CAACK,YAAd,CAA2BC,MAA3B,EACIN,aAAa,CAACO,aADlB,EAEIP,aAAa,CAACQ,SAFnB,gBAGE,iBAAS,SAAS,CAAC,WAAnB,wBACE,WAAI,SAAS,CAAC,aAAd,4EADF,CAEGR,aAAa,CAACO,aAAd,eAA+B,KAAC,SAAD,IAFlC,CAGGP,aAAa,CAACQ,SAAd,eACC,KAAC,aAAD,EACE,OAAO,CAAE,CAAEC,IAAI,CAAE,OAAR,CAAiBC,IAAI,CAAEV,aAAa,CAACQ,SAArC,CADX,CAEE,OAAO,CAAE,yBAAMJ,CAAAA,WAAW,EAAjB,EAFX,EAJJ,cASE,KAAC,IAAD,EAAM,IAAI,CAAEJ,aAAa,CAACK,YAA1B,EATF,GAJJ,CAiBD","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Preloader from '../Preloader/Preloader';\nimport MessageDialog from '../MessageDialog/MessageDialog';\nimport List from '../List/List';\nimport { topSalesRequest } from '../../actions/topSalesAction';\n\nexport default function TopSales() {\n  const topSalesState = useSelector((state) => state.topSalesReducer);\n  const dispatch = useDispatch();\n\n  async function getTopSales() {\n    dispatch(topSalesRequest());\n  }\n\n  useEffect(() => {\n    getTopSales();\n  }, [dispatch]);\n\n  return (\n    (topSalesState.topSalesData.length\n      || topSalesState.loadingStatus\n      || topSalesState.errorText) && (\n      <section className=\"top-sales\">\n        <h2 className=\"text-center\">Хиты продаж!</h2>\n        {topSalesState.loadingStatus && <Preloader />}\n        {topSalesState.errorText && (\n          <MessageDialog\n            content={{ type: 'error', text: topSalesState.errorText }}\n            onClick={() => getTopSales()}\n          />\n        )}\n        <List data={topSalesState.topSalesData} />\n      </section>\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}